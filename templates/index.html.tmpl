<!doctype html>
<html lang="en">
    <head>
    <base href="/">

    <title>GoCoop</title>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="icon" type="image/png" href="static/gocoop.png" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha256-wLz3iY/cO4e6vKZ4zRmo4+9XDpMcgKOvv/zEU3OMlRo=" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css" integrity="sha256-eZrrJcwDc/3uDhsdt61sL2oOBY362qM3lon1gyExkL0=" crossorigin="anonymous">
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img height="30" src="static/gocoop.png" alt="GoCoop" />  GoCoop
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
              </button>

              <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/configuration">Configuration</a>
                    </li>
                </ul>
            </div>

            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                <span class="navbar-text">
                    <a class="btn btn-primary me-md-2" href="/logout"><i class="fa fa-sign-out" aria-hidden="true"></i> Sign out</a>
                </span>
            </div>
        </div>
    </nav>

    <div class="container">
        {{ if eq .Status "unknown" }}
        <div class="row mt-4">
            <div class="col-12">
                <div class="alert alert-warning">
                <i class="fa fa-exclamation-circle" aria-hidden="true"></i> The status of the coop is <b>unknown</b>, you must set the status before opening or closing it. Go the the <a class="alert-link" href="configuration">configuration page</a>.
                </div>
            </div>
        </div>
        {{ end }}

        <div class="row mt-4">
            <div class="col-12 mb-4 col-md-6 col-lg-4">
                <div class="card bg-light">
                    <h5 class="card-header">Status</h5>
                    <div class="card-body">
                        <p class="text-center text-large text-capitalize display-4"> {{ .Status }}</p>
                    </div>
                </div>
            </div>

            <div class="col-12 mb-4 col-md-6 col-lg-4">
                <div class="card bg-light">
                    <h5 class="card-header">Schedule</h5>
                    <div class="card-body">
                        <p class="text-center"><i class="fa fa-sun-o" aria-hidden="true"></i> Next opening : {{ .NextOpeningTime.Format "02/01/2006 @ 15h04" }}</p>
                        <p class="text-center"><i class="fa fa-moon-o" aria-hidden="true"></i> Next closing : {{ .NextClosingTime.Format "02/01/2006 @ 15h04" }}</p>
                    </div>
                </div>
            </div>

            <div class="col-12 mb-4 col-md-6 col-lg-4">
                <div class="card bg-light">
                    <h5 class="card-header">Automatic mode</h5>
                    <div class="card-body">
                        {{ if .IsAutomatic }}
                        <p class="text-center display-4 text-capitalize"><i class="fa fa-check-circle-o text-success" aria-hidden="true"></i></p>
                        {{ else }}
                        <p class="text-center display-4 text-large text-capitalize"><i class="fa fa-window-close text-danger" aria-hidden="true"></i></p>
                        {{ end }}
                    </div>
                </div>
            </div>

            <div class="col-12 mb-4 col-md-6 col-lg-4">
                <div class="card bg-light">
                    <h5 class="card-header">Position</h5>
                    <div class="card-body">
                        <p class="text-center"><b>Lat.</b> {{ .Latitude }}</p>
                        <p class="text-center"><b>Long.</b> {{ .Longitude }}</p>
                        <p class="text-center"><a href="https://www.google.com/maps/search/?api=1&query={{ .Latitude }},{{ .Longitude }}" target="_blank">See on Google Maps <i class="fa fa-external-link" aria-hidden="true"></i></a></p>
                    </div>
                </div>
            </div>

            <div class="col-12 mb-4 col-md-6 col-lg-4">
                <div class="card bg-light">
                    <h5 class="card-header">Use</h5>
                    <div class="card-body">
                        {{ if not .IsAutomatic }}
                        <p class="text-center">
                            <button id="open-button" class="btn btn-success mr-2">Open</button>
                            <button id="close-button" class="btn btn-danger">Close</button>
                            <button id="stop-button" class="btn btn-danger">Stop</button>
                        </p>
                        {{ else }}
                        <p class="text-center text-danger"><i class="fa fa-exclamation-circle" aria-hidden="true"></i> Automatic mode is enabled ! Cannot use the coop.</p>
                        {{ end }}
                    </div>
                </div>
            </div>

            <div class="col-12 mb-4 col-md-6 col-lg-4">
                <div class="card bg-light">
                    <h5 class="card-header">Temperature</h5>
                    <div class="card-body">
                        <p class="text-center"><b>Temp (F)     Outside Coop: </b> <span id="outsideTemp"></span></p>
                        <p class="text-center"><b>Humidity (%RH)    Outside Coop: </b> <span id="outsideHumidity"></span></p>
                        <p class="text-center"><b>Temp (F)     Inside Coop: </b> <span id="insideTemp"></span></p>
                        <p class="text-center"><b>Humidity (%RH)    Inside Coop: </b> <span id="insideHumidity"></span></p>
                    </div>
                </div>
            </div>

            {{ range $key, $value := .Cameras }}
            <div class="col-12 col-md-6 col-lg-6">
                <div class="card bg-light">
                    <h5 class="card-header">Camera <small class="text-capitalize">({{ $key }})</small></h5>
                    <div class="card-body">
                    <p class="card-text"><img class="img-fluid" src="{{ $value }}" /></p>
                    <p class="text-center"><a target="_blank" href="{{ $value }}"><button class="btn btn-info"><i class="fa fa-search-plus" aria-hidden="true"></i> Larger view</button></a></p>
                    </div>
                </div>
            </div>
            {{ end }}
        </div>
    </div>
    <script>
        const openButton = document.getElementById('open-button');
        const closeButton = document.getElementById('close-button');
        const stopButton = document.getElementById('stop-button');
    
        if(openButton) {
            openButton.addEventListener('click', () => {
            fetch('/coop/open', { method: 'POST' })
                .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error ${response.status}`);
                }
                return response.text();
                })
                .then(responseText => {
                console.log(responseText);
                })
                .catch(error => {
                console.error(error);
                });
            });
        }
    
        if(closeButton) {
            closeButton.addEventListener('click', () => {
            fetch('/coop/close', { method: 'POST' })
                .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error ${response.status}`);
                }
                return response.text();
                })
                .then(responseText => {
                console.log(responseText);
                })
                .catch(error => {
                console.error(error);
                });
            });
        }

        if(stopButton) {
            stopButton.addEventListener('click', () => {
                fetch('/coop/stop', { method: 'POST' })
                .then(response => {
                    if (!response.ok) {
                    throw new Error(`HTTP error ${response.status}`);
                    }
                    return response.text();
                })
                .then(responseText => {
                    console.log(responseText);
                })
                .catch(error => {
                    console.error(error);
                });
            });
        }

        function updateCoopTemperature() {
            fetch('/coop/temperature', { method: 'GET' })
                .then(response => response.json())
                .then(data => {
                    const outsideTempElement = document.getElementById('outsideTemp');
                    outsideTempElement.innerText = data.OutsideTemp;

                    const outsideHumidityElement = document.getElementById('outsideHumidity');
                    outsideHumidityElement.innerText = data.OutsideHumidity;

                    const insideTempElement = document.getElementById('insideTemp');
                    insideTempElement.innerText = data.InsideTemp;

                    const insideHumidityElement = document.getElementById('insideHumidity');
                    insideHumidityElement.innerText = data.InsideHumidity;
                })
                .catch(error => console.error(error));
        }

        // Call updateTemperature() once on page load to get initial data
        updateCoopTemperature();

        setInterval(updateCoopTemperature, 60000); // Update every 1 min
      </script>
</body>
</html>